.decl uaf(func:symbol, id1:unsigned, id2:unsigned)
uaf(func, id1, id2) :- 
	Instruction(id1, _, _, _, _, _, _, _, _),
	Instruction(id2, _, _, _, _, _, _, _, _),
	getFunction(id1, _, func), getFunction(id2, _, func),

	Endpoint([id1, 0, 0]),
	CallFree(id1),

	Endpoint([id2, 0, x]),
	equal([id1, 0, 0], [id2, 0, x]),
	reachCfg(id1, id2).
// heuristic: if function call using literal string
// then the arg is a const value (pointing to .rodata)
.decl fmtStr(func:symbol, id:unsigned)
fmtStr(func, id) :-
	Instruction(id, _, _, _, _, _, _, _, _),
	getFunction(id, _, func),

	Endpoint([id, 0, 0]),
	CallPrintf(id),
	!value([id, 0, 0], _).
